import 'dart:ui';
import 'package:flutter/material.dart';
import 'package:taxi_booking/utils/Extensions/size_utils.dart';
import 'pref_utils.dart';

/// Helper class for managing themes and colors.
class ThemeHelper {
  // The current app theme
  var _appTheme = PrefUtils().getThemeData();

// A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: appTheme.whiteA70001,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.green600,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 1,
        space: 1,
        color: appTheme.blue50,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyLarge: TextStyle(
          color: appTheme.primary,
          fontSize: 59.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w600,
        ),
        bodyMedium: TextStyle(
          color: appTheme.primary,
          fontSize: 38.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w500,
        ),
        bodySmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 29.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w600,
        ),
        labelLarge: TextStyle(
          color: appTheme.secondry,
          fontSize: 31.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w600,
        ),
        labelMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 10.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w700,
        ),
        titleLarge: TextStyle(
          color: appTheme.gray90001,
          fontSize: 20.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w600,
        ),
        titleMedium: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 18.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w700,
        ),
        titleSmall: TextStyle(
          color: appTheme.whiteA70001,
          fontSize: 14.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w700,
        ),
        labelSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Tajawal',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light();
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  Color get primary => Color(0XFF4CC3E5);
  Color get secondry => Color(0XFF201B51);

  // Black
  Color get black900 => Color(0XFF090A0E);
  Color get black90001 => Color(0XFF000000);

  Color get black51 => Color(0XFF515151);
  Color get blackc190001 => Color(0XFF4D4D4D);

  // Blue
  Color get blue50 => Color(0XFFDBE4FF);

  // BlueGray
  Color get blueGray100 => Color(0XFFD4D4D4);
  Color get blueGrayf2 => Color(0XFFF2F2F2);

  Color get blueGray200 => Color(0XFF9FB7CA);
  Color get blueGray300 => Color(0XFF9CA0AC);
  Color get blueGray400 => Color(0XFF8591A5);
  Color get blueGray700 => Color(0XFF475C50);
  Color get blueGray900 => Color(0XFF333333);
  Color get blueGray90001 => Color(0XFF343434);

  // BlueGrayEf
  Color get blueGray700Ef => Color(0XEF465C50);

  // DeepPurple
  Color get deepPurple300 => Color(0XFF8D7BB0);

  // Gray
  Color get gray100 => Color(0XFFF3F3F3);
  Color get gray400 => Color(0XFFC4C4C4);
  Color get gray50 => Color(0XFFFAFAFA);
  Color get gray600 => Color(0XFF6E6E6E);
  Color get gray700 => Color(0XFF666666);
  Color get gray800 => Color(0XFF505050);
  Color get gray900 => Color(0XFF141310);
  Color get gray90001 => Color(0XFF212121);
  Color get grayCf => Color(0x34CFCFCF);

  // Green
  Color get green600 => Color(0XFF418A61);

  // Indigo
  Color get indigoA700 => Color(0XFF1C50F9);
  Color get indigoA70001 => Color(0XFF033AEE);

  // LightGreen
  Color get lightGreen800 => Color(0XFF4D8231);
  Color get lightGreen900 => Color(0XFF355D27);

  // Red
  Color get redA200 => Color(0XFFF66161);
  Color get redA700 => Color(0XFFF50D0D);

  // White
  Color get whiteA700 => Color(0XFFFEFEFF);
  Color get whiteA70001 => Color(0XFFFFFFFF);
  Color get gray80001 => Color(0XFF4C4C4C);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
